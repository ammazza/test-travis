language: clojure
jdk:
  - oraclejdk8

# Environment variables (e.g. encrypted credentials).
# env:
#   global:
#   - var1
#   - var2

# stages:
# - test
# - publish


##############################################################################
# Desired workflow:
#
# Test:
# - All commits! (Add my cloned version as additional origin to secure online daily work).
#
# Publish:
# From master:
# - all commits with snapshot version
# - non-snapshots if they have a corresponding version tag
#
# From version branch:
# - commits with a corresponding version-patch# tag
#
##############################################################################

# This section gets executed before the stages script sections.
before_script:
- export INGEST_VERSION=$(lein pom &> /dev/null && mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)    

# Pipeline stages.
jobs:
  include:
  # - stage: prepare
  #   script:
  #   - export INGEST_VERSION=$(lein pom &> /dev/null && mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)    
  - stage: test
    if: branch IN (master, devel) OR branch =~ ^version-
    script:
    - echo "I'm testing Ingestor "$INGEST_VERSION
  - stage: publish
    if: branch IN (master, devel) OR branch =~ ^version-
    script:
    - echo "I'm publishing Ingestor "$INGEST_VERSION
